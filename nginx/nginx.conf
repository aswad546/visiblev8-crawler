worker_processes 1;
 
events { worker_connections 1024; }

http {
    upstream backend {
        server backend:4000;
    }

    upstream frontend {
        server frontend:3000;
    }

    sendfile on;

    map $http_x_userid $req_userid {                                                 
        default   $http_x_userid;                                               
        ""        "user";                                                      
    }

    map $upstream_http_www_authenticate $new_www_authenticate {
        ~(?<pre_auth>.*realm=")(.*?)(?<post_auth>\/api\/v1\/registry_auth".*)   "$pre_auth$scheme://$host:$server_port$post_auth";
        default "";
    }

    server {
        listen 8080;

        location / {
            # a bunch of boilerplate proxy configuration
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header X-Insecure "true";
            proxy_set_header X-UserId $req_userid;
            proxy_set_header X-Email "user@example.com";
            proxy_set_header X-User '{"some":"data"}';

            client_max_body_size 0;
            chunked_transfer_encoding on;

            # the real magic is here where we forward requests to the address that the Node.js server is running on
            proxy_pass http://frontend/;
        }

        location /api/ {
            # a bunch of boilerplate proxy configuration
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header X-Insecure "true";
            proxy_set_header X-UserId $req_userid;
            proxy_set_header X-Email "user@example.com";
            proxy_set_header X-User '{"some":"data"}';

            client_max_body_size 0;
            chunked_transfer_encoding on;

            # the real magic is here where we forward requests to the address that the Node.js server is running on
            proxy_pass http://backend/api/;
        }
    }
}
